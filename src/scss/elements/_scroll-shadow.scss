@use "sass:list";
@use "../core/theme";
@use "../core/utils";

// ==============================================
// ======== CONFIGURABLE VARIABLES ==============
// ==============================================

$scroll-shadow-configurable-variables: (
  "max-size": 20px,
  "shadow-color": theme.color("surface")
);

$scroll-shadow-configurable-variables-prefix: "scroll-shadow";

@mixin configurable-variables-declarations() {
  @include utils.variable-declarations(
    $scroll-shadow-configurable-variables,
    $scroll-shadow-configurable-variables-prefix
  );
}

@function variable($variable) {
  @return utils.get-var-string(
    $variables: $scroll-shadow-configurable-variables,
    $key: $variable,
    $prefix: $scroll-shadow-configurable-variables-prefix,
    $type: "scroll shadow variable"
  );
}

// ==============================================
// ======== OTHER SCROLL SHADOW STYLES ==========
// ==============================================

$scrollable-element-scroll-top-css-var: --scrollable-element-scroll-top;
$scrollable-element-scroll-bottom-css-var: --scrollable-element-scroll-bottom;

@mixin root($position) {
  // Ancestor should have one of these since shadow is absolutely positioned
  $absolute-element-ancestor-positions: [absolute, fixed, relative, sticky];

  @if list.index($absolute-element-ancestor-positions, $position) == null {
    @error "Expected '#{$position}' to be one of '#{$absolute-element-ancestor-positions}'";
  }

  position: $position;
}

@mixin scrollable {
  // Scrollable that determines scroll shadow (no requirements)
}

@mixin shadow {
  #{$scrollable-element-scroll-top-css-var}: 0;
  #{$scrollable-element-scroll-bottom-css-var}: 0;

  position: absolute;
  pointer-events: none;

  left: 0;
  top: 0;

  height: 100%;
  width: 100%;

  $shadow-color: variable("shadow-color");
  $shadow-max-size: variable("max-size");
  $scroll-top: $scrollable-element-scroll-top-css-var;
  $scroll-bottom: $scrollable-element-scroll-bottom-css-var;

  $shadow-1: linear-gradient($shadow-color, transparent) center top;
  $shadow-2: linear-gradient(transparent, $shadow-color) center bottom;
  $shadow-size-1: 100% min(calc(var($scroll-top) / 2), $shadow-max-size);
  $shadow-size-2: 100% min(calc(var($scroll-bottom) / 2), $shadow-max-size);

  background: $shadow-1, $shadow-2;
  background-size: $shadow-size-1, $shadow-size-2;
  background-repeat: no-repeat;
}
